{"id": "97", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 97,\n    \"intent_template_id\": 120,\n    \"sites\": [\n        \"map\",\n        \"wikipedia\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent\": \"Tell me the distance to drive from Carnegie Mellon University to the top computer science school in massachusetts\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"map\",\n        \"wikipedia\"\n    ],\n    \"task_id\": 97,\n    \"require_login\": true,\n    \"storage_state\": null,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Tell me the distance to drive from Carnegie Mellon University to the top computer science school in massachusetts\",\n    \"instantiation_dict\": {},\n    \"intent\": \"Tell me the distance to drive from Carnegie Mellon University to the top computer science school in massachusetts\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"string_match\"\n        ],\n        \"reference_answers\": {\n            \"must_include\": [\n                \"914km\"\n            ]\n        },\n        \"reference_url\": \"\",\n        \"program_html\": [],\n        \"string_note\": \"\",\n        \"reference_answer_raw_annotation\": \"914 km\"\n    },\n    \"intent_template_id\": 120\n}"}}}
{"id": "556", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 556,\n    \"intent_template_id\": 87,\n    \"sites\": [\n        \"gitlab\",\n        \"wikipedia\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__GITLAB__\",\n    \"geolocation\": null,\n    \"intent\": \"Create a repo named nolan_honest_fans with movies directed by Christopher Nolan in a README file\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"gitlab\",\n        \"wikipedia\"\n    ],\n    \"task_id\": 556,\n    \"require_login\": true,\n    \"storage_state\": \"./.auth/gitlab_state.json\",\n    \"start_url\": \"__GITLAB__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Create a repo named {{name}} with {{topics}} in a README file\",\n    \"instantiation_dict\": {\n        \"name\": \"nolan_honest_fans\",\n        \"topics\": \"movies directed by Christopher Nolan\"\n    },\n    \"intent\": \"Create a repo named nolan_honest_fans with movies directed by Christopher Nolan in a README file\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"\",\n        \"program_html\": [\n            {\n                \"url\": \"__GITLAB__/byteblaze/nolan_honest_fans/-/raw/main/README.md\",\n                \"locator\": \"\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Following\",\n                        \"Memento\",\n                        \"Insomnia\",\n                        \"Batman Begins\",\n                        \"The Prestige\",\n                        \"The Dark Knight\",\n                        \"Inception\",\n                        \"The Dark Knight Rises\",\n                        \"Interstellar\",\n                        \"Dunkirk\",\n                        \"Tenet\",\n                        \"Oppenheimer\"\n                    ]\n                }\n            }\n        ]\n    },\n    \"intent_template_id\": 87\n}"}}}
{"id": "557", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 557,\n    \"intent_template_id\": 87,\n    \"sites\": [\n        \"gitlab\",\n        \"wikipedia\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__GITLAB__\",\n    \"geolocation\": null,\n    \"intent\": \"Create a repo named nolan_old_fans with movies directed by Christopher Nolan before 2010 in a README file\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"gitlab\",\n        \"wikipedia\"\n    ],\n    \"task_id\": 557,\n    \"require_login\": true,\n    \"storage_state\": \"./.auth/gitlab_state.json\",\n    \"start_url\": \"__GITLAB__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Create a repo named {{name}} with {{topics}} in a README file\",\n    \"instantiation_dict\": {\n        \"name\": \"nolan_old_fans\",\n        \"topics\": \"movies directed by Christopher Nolan before 2010\"\n    },\n    \"intent\": \"Create a repo named nolan_old_fans with movies directed by Christopher Nolan before 2010 in a README file\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"\",\n        \"program_html\": [\n            {\n                \"url\": \"__GITLAB__/byteblaze/nolan_old_fans/-/raw/main/README.md\",\n                \"locator\": \"\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Following\",\n                        \"Memento\",\n                        \"Insomnia\",\n                        \"Batman Begins\",\n                        \"The Prestige\",\n                        \"The Dark Knight\"\n                    ]\n                }\n            }\n        ]\n    },\n    \"intent_template_id\": 87\n}"}}}
{"id": "558", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 558,\n    \"intent_template_id\": 87,\n    \"sites\": [\n        \"gitlab\",\n        \"wikipedia\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__GITLAB__\",\n    \"geolocation\": null,\n    \"intent\": \"Create a repo named nolan_young_fans with movies directed by Christopher Nolan after 2010 in a README file\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"gitlab\",\n        \"wikipedia\"\n    ],\n    \"task_id\": 558,\n    \"require_login\": true,\n    \"storage_state\": \"./.auth/gitlab_state.json\",\n    \"start_url\": \"__GITLAB__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Create a repo named {{name}} with {{topics}} in a README file\",\n    \"instantiation_dict\": {\n        \"name\": \"nolan_young_fans\",\n        \"topics\": \"movies directed by Christopher Nolan after 2010\"\n    },\n    \"intent\": \"Create a repo named nolan_young_fans with movies directed by Christopher Nolan after 2010 in a README file\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"\",\n        \"program_html\": [\n            {\n                \"url\": \"__GITLAB__/byteblaze/nolan_young_fans/-/raw/main/README.md\",\n                \"locator\": \"\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Inception\",\n                        \"The Dark Knight Rises\",\n                        \"Interstellar\",\n                        \"Dunkirk\",\n                        \"Tenet\",\n                        \"Oppenheimer\"\n                    ]\n                }\n            }\n        ]\n    },\n    \"intent_template_id\": 87\n}"}}}
{"id": "559", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 559,\n    \"intent_template_id\": 87,\n    \"sites\": [\n        \"gitlab\",\n        \"wikipedia\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__GITLAB__\",\n    \"geolocation\": null,\n    \"intent\": \"Create a repo named nolan_followers with career timeline of Christopher Nolan in a README file\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"gitlab\",\n        \"wikipedia\"\n    ],\n    \"task_id\": 559,\n    \"require_login\": true,\n    \"storage_state\": \"./.auth/gitlab_state.json\",\n    \"start_url\": \"__GITLAB__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Create a repo named {{name}} with {{topics}} in a README file\",\n    \"instantiation_dict\": {\n        \"name\": \"nolan_followers\",\n        \"topics\": \"career timeline of Christopher Nolan\"\n    },\n    \"intent\": \"Create a repo named nolan_followers with career timeline of Christopher Nolan in a README file\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"\",\n        \"program_html\": [\n            {\n                \"url\": \"__GITLAB__/byteblaze/nolan_followers/-/raw/main/README.md\",\n                \"locator\": \"\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"1993\\u20132003: Early career and breakthrough\",\n                        \"2003\\u20132013: Widespread recognition\",\n                        \"2014\\u20132019: Established Hollywood auteur\",\n                        \"2020\\u2013present\"\n                    ]\n                }\n            }\n        ]\n    },\n    \"intent_template_id\": 87\n}"}}}
{"id": "560", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 560,\n    \"intent_template_id\": 87,\n    \"sites\": [\n        \"gitlab\",\n        \"wikipedia\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__GITLAB__\",\n    \"geolocation\": null,\n    \"intent\": \"Create a repo named nolan_academy_awards with movies that won Academy Awards by Christopher Nolan in a README file\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"gitlab\",\n        \"wikipedia\"\n    ],\n    \"task_id\": 560,\n    \"require_login\": true,\n    \"storage_state\": \"./.auth/gitlab_state.json\",\n    \"start_url\": \"__GITLAB__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Create a repo named {{name}} with {{topics}} in a README file\",\n    \"instantiation_dict\": {\n        \"name\": \"nolan_academy_awards\",\n        \"topics\": \"movies that won Academy Awards by Christopher Nolan\"\n    },\n    \"intent\": \"Create a repo named nolan_academy_awards with movies that won Academy Awards by Christopher Nolan in a README file\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"\",\n        \"program_html\": [\n            {\n                \"url\": \"__GITLAB__/byteblaze/nolan_academy_awards/-/raw/main/README.md\",\n                \"locator\": \"\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"The Dark Knight\",\n                        \"Inception\",\n                        \"Interstellar\",\n                        \"Dunkirk\",\n                        \"Tenet\"\n                    ]\n                }\n            }\n        ]\n    },\n    \"intent_template_id\": 87\n}"}}}
{"id": "561", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 561,\n    \"intent_template_id\": 87,\n    \"sites\": [\n        \"gitlab\",\n        \"wikipedia\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__GITLAB__\",\n    \"geolocation\": null,\n    \"intent\": \"Create a repo named bafta_awards_nolan with movies that are nominated BAFTA Awards by Christopher Nolan in a README file\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"gitlab\",\n        \"wikipedia\"\n    ],\n    \"task_id\": 561,\n    \"require_login\": true,\n    \"storage_state\": \"./.auth/gitlab_state.json\",\n    \"start_url\": \"__GITLAB__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Create a repo named {{name}} with {{topics}} in a README file\",\n    \"instantiation_dict\": {\n        \"name\": \"bafta_awards_nolan\",\n        \"topics\": \"movies that are nominated BAFTA Awards by Christopher Nolan\"\n    },\n    \"intent\": \"Create a repo named bafta_awards_nolan with movies that are nominated BAFTA Awards by Christopher Nolan in a README file\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"\",\n        \"program_html\": [\n            {\n                \"url\": \"__GITLAB__/byteblaze/bafta_awards_nolan/-/raw/main/README.md\",\n                \"locator\": \"\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Batman Begins\",\n                        \"The Dark Knight\",\n                        \"Inception\",\n                        \"The Dark Knight Rises\",\n                        \"Interstellar\",\n                        \"Dunkirk\",\n                        \"Tenet\"\n                    ]\n                }\n            }\n        ]\n    },\n    \"intent_template_id\": 87\n}"}}}
{"id": "681", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 681,\n    \"intent_template_id\": 116,\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent\": \"Find a GitLab repository related to gan implementation and make a Reddit post linking to it in a relevant subreddit\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"task_id\": 681,\n    \"require_login\": true,\n    \"storage_state\": \"./.auth/gitlab.reddit_state.json\",\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Find a GitLab repository related to {{topic}} and make a Reddit post linking to it in a relevant subreddit\",\n    \"instantiation_dict\": {\n        \"topic\": \"gan implementation\"\n    },\n    \"intent\": \"Find a GitLab repository related to gan implementation and make a Reddit post linking to it in a relevant subreddit\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"url_match\",\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"__REDDIT__/f/machinelearning |OR| __REDDIT__/f/deeplearning |OR| __REDDIT__/f/technology\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('.submission__inner').outerText\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"gan implementation\",\n                        \"__GITLAB__/eriklindernoren/PyTorch-GAN\"\n                    ]\n                }\n            }\n        ],\n        \"url_note\": \"GOLD in PRED\"\n    },\n    \"intent_template_id\": 116\n}"}}}
{"id": "682", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 682,\n    \"intent_template_id\": 116,\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent\": \"Find a GitLab repository related to chatGPT and make a Reddit post linking to it in a relevant subreddit\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"task_id\": 682,\n    \"require_login\": true,\n    \"storage_state\": \"./.auth/gitlab.reddit_state.json\",\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Find a GitLab repository related to {{topic}} and make a Reddit post linking to it in a relevant subreddit\",\n    \"instantiation_dict\": {\n        \"topic\": \"chatGPT\"\n    },\n    \"intent\": \"Find a GitLab repository related to chatGPT and make a Reddit post linking to it in a relevant subreddit\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"url_match\",\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"__REDDIT__/f/machinelearning |OR| __REDDIT__/f/singularity |OR| __REDDIT__/f/deeplearning |OR| __REDDIT__/f/technology\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('.submission__inner').outerText\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"chatgpt\",\n                        \"__GITLAB__/convexegg/chatgpt\"\n                    ]\n                }\n            }\n        ],\n        \"url_note\": \"GOLD in PRED\"\n    },\n    \"intent_template_id\": 116\n}"}}}
{"id": "683", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 683,\n    \"intent_template_id\": 116,\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent\": \"Find a GitLab repository related to metaseq and make a Reddit post linking to it in a relevant subreddit\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"task_id\": 683,\n    \"require_login\": true,\n    \"storage_state\": \"./.auth/gitlab.reddit_state.json\",\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Find a GitLab repository related to {{topic}} and make a Reddit post linking to it in a relevant subreddit\",\n    \"instantiation_dict\": {\n        \"topic\": \"metaseq\"\n    },\n    \"intent\": \"Find a GitLab repository related to metaseq and make a Reddit post linking to it in a relevant subreddit\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"url_match\",\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"__REDDIT__/f/machinelearning |OR| __REDDIT__/f/deeplearning\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('.submission__inner').outerText\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"metaseq\",\n                        \"__GITLAB__/root/metaseq\"\n                    ]\n                }\n            }\n        ],\n        \"url_note\": \"GOLD in PRED\"\n    },\n    \"intent_template_id\": 116\n}"}}}
{"id": "684", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 684,\n    \"intent_template_id\": 117,\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent\": \"Promote byteblaze/cloud-to-butt to subreddit LifeProTips with the description from the repo itself.\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"task_id\": 684,\n    \"require_login\": true,\n    \"storage_state\": \"./.auth/gitlab.reddit_state.json\",\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Promote {{repo}} to subreddit {{subreddit}} with the description from the repo itself.\",\n    \"instantiation_dict\": {\n        \"repo\": \"byteblaze/cloud-to-butt\",\n        \"subreddit\": \"LifeProTips\"\n    },\n    \"intent\": \"Promote byteblaze/cloud-to-butt to subreddit LifeProTips with the description from the repo itself.\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"url_match\",\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"__REDDIT__/f/LifeProTips\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('.submission__inner').outerText + [...document.querySelector('.submission__inner').querySelectorAll('[href],[src]')].map(elem => elem.getAttribute('href') || elem.getAttribute('src')).join(' ')\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Chrome extension that replaces occurrences of 'the cloud' with 'my butt'\",\n                        \"__GITLAB__/byteblaze/cloud-to-butt\"\n                    ]\n                }\n            }\n        ],\n        \"url_note\": \"GOLD in PRED\"\n    },\n    \"intent_template_id\": 117\n}"}}}
{"id": "685", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 685,\n    \"intent_template_id\": 117,\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent\": \"Promote byteblaze/dotfiles to subreddit aww with the description from the repo itself.\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"task_id\": 685,\n    \"require_login\": true,\n    \"storage_state\": \"./.auth/gitlab.reddit_state.json\",\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Promote {{repo}} to subreddit {{subreddit}} with the description from the repo itself.\",\n    \"instantiation_dict\": {\n        \"repo\": \"byteblaze/dotfiles\",\n        \"subreddit\": \"aww\"\n    },\n    \"intent\": \"Promote byteblaze/dotfiles to subreddit aww with the description from the repo itself.\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"url_match\",\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"__REDDIT__/f/aww\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('.submission__inner').outerText + [...document.querySelector('.submission__inner').querySelectorAll('[href],[src]')].map(elem => elem.getAttribute('href') || elem.getAttribute('src')).join(' ')\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Computer setup\",\n                        \"__GITLAB__/byteblaze/dotfiles\"\n                    ]\n                }\n            }\n        ],\n        \"url_note\": \"GOLD in PRED\"\n    },\n    \"intent_template_id\": 117\n}"}}}
{"id": "686", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 686,\n    \"intent_template_id\": 117,\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent\": \"Promote auth0/angular-storage to subreddit technology with the description from the repo itself.\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"task_id\": 686,\n    \"require_login\": true,\n    \"storage_state\": \"./.auth/gitlab.reddit_state.json\",\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Promote {{repo}} to subreddit {{subreddit}} with the description from the repo itself.\",\n    \"instantiation_dict\": {\n        \"repo\": \"auth0/angular-storage\",\n        \"subreddit\": \"technology\"\n    },\n    \"intent\": \"Promote auth0/angular-storage to subreddit technology with the description from the repo itself.\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"url_match\",\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"__REDDIT__/f/technology\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('.submission__inner').outerText + [...document.querySelector('.submission__inner').querySelectorAll('[href],[src]')].map(elem => elem.getAttribute('href') || elem.getAttribute('src')).join(' ')\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"A storage library for AngularJS done right\",\n                        \"__GITLAB__/auth0/angular-storage\"\n                    ]\n                }\n            }\n        ],\n        \"url_note\": \"GOLD in PRED\"\n    },\n    \"intent_template_id\": 117\n}"}}}
{"id": "687", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 687,\n    \"intent_template_id\": 117,\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent\": \"Promote koush/AndroidAsync to subreddit funny with the description from the repo itself.\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"task_id\": 687,\n    \"require_login\": true,\n    \"storage_state\": \"./.auth/gitlab.reddit_state.json\",\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Promote {{repo}} to subreddit {{subreddit}} with the description from the repo itself.\",\n    \"instantiation_dict\": {\n        \"repo\": \"koush/AndroidAsync\",\n        \"subreddit\": \"funny\"\n    },\n    \"intent\": \"Promote koush/AndroidAsync to subreddit funny with the description from the repo itself.\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"url_match\",\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"__REDDIT__/f/funny\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('.submission__inner').outerText + [...document.querySelector('.submission__inner').querySelectorAll('[href],[src]')].map(elem => elem.getAttribute('href') || elem.getAttribute('src')).join(' ')\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Asynchronous socket, http(s) (client+server) and websocket library for android. Based on nio, not threads.\",\n                        \"__GITLAB__/koush/AndroidAsync\"\n                    ]\n                }\n            }\n        ],\n        \"url_note\": \"GOLD in PRED\"\n    },\n    \"intent_template_id\": 117\n}"}}}
{"id": "688", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 688,\n    \"intent_template_id\": 117,\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent\": \"Promote lahwaacz/arch-wiki-docs to subreddit science with the description from the repo itself.\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"reddit\",\n        \"gitlab\"\n    ],\n    \"task_id\": 688,\n    \"require_login\": true,\n    \"storage_state\": \"./.auth/gitlab.reddit_state.json\",\n    \"start_url\": \"__REDDIT__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Promote {{repo}} to subreddit {{subreddit}} with the description from the repo itself.\",\n    \"instantiation_dict\": {\n        \"repo\": \"lahwaacz/arch-wiki-docs\",\n        \"subreddit\": \"science\"\n    },\n    \"intent\": \"Promote lahwaacz/arch-wiki-docs to subreddit science with the description from the repo itself.\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"url_match\",\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"__REDDIT__/f/science\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('.submission__inner').outerText + [...document.querySelector('.submission__inner').querySelectorAll('[href],[src]')].map(elem => elem.getAttribute('href') || elem.getAttribute('src')).join(' ')\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"A script to download pages from Arch Wiki for offline browsing\",\n                        \"__GITLAB__/lahwaacz/arch-wiki-docs\"\n                    ]\n                }\n            }\n        ],\n        \"url_note\": \"GOLD in PRED\"\n    },\n    \"intent_template_id\": 117\n}"}}}
{"id": "737", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 737,\n    \"intent_template_id\": 94,\n    \"sites\": [\n        \"wikipedia\",\n        \"map\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent\": \"Show me the way from Carnegie Mellon University to the home stadium of Philadelphia 76ers \"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"wikipedia\",\n        \"map\"\n    ],\n    \"task_id\": 737,\n    \"require_login\": true,\n    \"storage_state\": null,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Show me the way from {{location}} to the home stadium of {{sport_team}} {{time}}\",\n    \"instantiation_dict\": {\n        \"location\": \"Carnegie Mellon University\",\n        \"sport_team\": \"Philadelphia 76ers\",\n        \"time\": \"\"\n    },\n    \"intent\": \"Show me the way from Carnegie Mellon University to the home stadium of Philadelphia 76ers \",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('[name=\\\"route_from\\\"').value\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Carnegie Mellon University\",\n                        \"Pittsburgh\"\n                    ]\n                }\n            },\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('[name=\\\"route_to\\\"').value\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Wells Fargo Center\",\n                        \"South Philadelphia Sports Complex\"\n                    ]\n                }\n            },\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector(\\\"div#content select.routing_engines\\\").selectedIndex\",\n                \"required_contents\": {\n                    \"exact_match\": \"1\"\n                }\n            }\n        ]\n    },\n    \"intent_template_id\": 94\n}"}}}
{"id": "738", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 738,\n    \"intent_template_id\": 94,\n    \"sites\": [\n        \"wikipedia\",\n        \"map\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent\": \"Show me the way from Carnegie Mellon University to the home stadium of Philadelphia 76ers in the 70th\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"wikipedia\",\n        \"map\"\n    ],\n    \"task_id\": 738,\n    \"require_login\": true,\n    \"storage_state\": null,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Show me the way from {{location}} to the home stadium of {{sport_team}} {{time}}\",\n    \"instantiation_dict\": {\n        \"location\": \"Carnegie Mellon University\",\n        \"sport_team\": \"Philadelphia 76ers\",\n        \"time\": \"in the 70th\"\n    },\n    \"intent\": \"Show me the way from Carnegie Mellon University to the home stadium of Philadelphia 76ers in the 70th\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('[name=\\\"route_from\\\"').value\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Carnegie Mellon University\",\n                        \"Pittsburgh\"\n                    ]\n                }\n            },\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('[name=\\\"route_to\\\"').value\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"3601 South Broad Street\",\n                        \"South Philadelphia\"\n                    ]\n                }\n            },\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector(\\\"div#content select.routing_engines\\\").selectedIndex\",\n                \"required_contents\": {\n                    \"exact_match\": \"1\"\n                }\n            }\n        ]\n    },\n    \"intent_template_id\": 94\n}"}}}
{"id": "739", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 739,\n    \"intent_template_id\": 94,\n    \"sites\": [\n        \"wikipedia\",\n        \"map\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent\": \"Show me the way from Carnegie Mellon University to the home stadium of Yankees in the 80th\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"wikipedia\",\n        \"map\"\n    ],\n    \"task_id\": 739,\n    \"require_login\": true,\n    \"storage_state\": null,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Show me the way from {{location}} to the home stadium of {{sport_team}} {{time}}\",\n    \"instantiation_dict\": {\n        \"location\": \"Carnegie Mellon University\",\n        \"sport_team\": \"Yankees\",\n        \"time\": \"in the 80th\"\n    },\n    \"intent\": \"Show me the way from Carnegie Mellon University to the home stadium of Yankees in the 80th\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('[name=\\\"route_from\\\"').value\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Carnegie Mellon University\",\n                        \"Pittsburgh\"\n                    ]\n                }\n            },\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('[name=\\\"route_to\\\"').value\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Yankee Stadium\",\n                        \"East 161st Street\"\n                    ]\n                }\n            },\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector(\\\"div#content select.routing_engines\\\").selectedIndex\",\n                \"required_contents\": {\n                    \"exact_match\": \"1\"\n                }\n            }\n        ]\n    },\n    \"intent_template_id\": 94\n}"}}}
{"id": "740", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 740,\n    \"intent_template_id\": 94,\n    \"sites\": [\n        \"wikipedia\",\n        \"map\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent\": \"Show me the way from Carnegie Mellon University to the home stadium of NYC NBA team \"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"wikipedia\",\n        \"map\"\n    ],\n    \"task_id\": 740,\n    \"require_login\": true,\n    \"storage_state\": null,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Show me the way from {{location}} to the home stadium of {{sport_team}} {{time}}\",\n    \"instantiation_dict\": {\n        \"location\": \"Carnegie Mellon University\",\n        \"sport_team\": \"NYC NBA team\",\n        \"time\": \"\"\n    },\n    \"intent\": \"Show me the way from Carnegie Mellon University to the home stadium of NYC NBA team \",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('[name=\\\"route_from\\\"').value\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Carnegie Mellon University\",\n                        \"Pittsburgh\"\n                    ]\n                }\n            },\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('[name=\\\"route_to\\\"').value\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Madison Square Garden\",\n                        \"Pennsylvania Plaza\",\n                        \"Manhattan\",\n                        \"New York\"\n                    ]\n                }\n            },\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector(\\\"div#content select.routing_engines\\\").selectedIndex\",\n                \"required_contents\": {\n                    \"exact_match\": \"1\"\n                }\n            }\n        ]\n    },\n    \"intent_template_id\": 94\n}"}}}
{"id": "741", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 741,\n    \"intent_template_id\": 94,\n    \"sites\": [\n        \"wikipedia\",\n        \"map\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent\": \"Show me the way from Carnegie Mellon University to the home stadium of Boston home NBA team \"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"wikipedia\",\n        \"map\"\n    ],\n    \"task_id\": 741,\n    \"require_login\": true,\n    \"storage_state\": null,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Show me the way from {{location}} to the home stadium of {{sport_team}} {{time}}\",\n    \"instantiation_dict\": {\n        \"location\": \"Carnegie Mellon University\",\n        \"sport_team\": \"Boston home NBA team\",\n        \"time\": \"\"\n    },\n    \"intent\": \"Show me the way from Carnegie Mellon University to the home stadium of Boston home NBA team \",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('[name=\\\"route_from\\\"').value\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Carnegie Mellon University\",\n                        \"Pittsburgh\"\n                    ]\n                }\n            },\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('[name=\\\"route_to\\\"').value\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"TD Garden\",\n                        \"Boston\",\n                        \"Massachusetts\"\n                    ]\n                }\n            },\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector(\\\"div#content select.routing_engines\\\").selectedIndex\",\n                \"required_contents\": {\n                    \"exact_match\": \"1\"\n                }\n            }\n        ]\n    },\n    \"intent_template_id\": 94\n}"}}}
{"id": "759", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 759,\n    \"intent_template_id\": 42,\n    \"sites\": [\n        \"map\",\n        \"shopping_admin\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent\": \"Show me the route and driving time from the city where my E-commerce customer Sophia Young lives to New York City\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"map\",\n        \"shopping_admin\"\n    ],\n    \"task_id\": 759,\n    \"require_login\": true,\n    \"storage_state\": null,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Show me the route and driving time from {{city1}} to {{city2}}\",\n    \"instantiation_dict\": {\n        \"city1\": \"the city where my E-commerce customer Sophia Young lives\",\n        \"city2\": \"New York City\"\n    },\n    \"intent\": \"Show me the route and driving time from the city where my E-commerce customer Sophia Young lives to New York City\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector(\\\"div#content select.routing_engines\\\").selectedIndex\",\n                \"required_contents\": {\n                    \"exact_match\": \"1\"\n                }\n            },\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('[name=\\\"route_from\\\"').value\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Boston\"\n                    ]\n                }\n            },\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('[name=\\\"route_to\\\"').value\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"New York\"\n                    ]\n                }\n            }\n        ]\n    },\n    \"intent_template_id\": 42\n}"}}}
{"id": "760", "template": ["/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/Common", "/Users/eric/git/AI/wyse/web3eval/benchmarks/WebArena/Templates/WyseMate"], "substitutions": {"task_prompt.json.txt": {"__TASK_PROMPT__": "{\n    \"task_id\": 760,\n    \"intent_template_id\": 42,\n    \"sites\": [\n        \"map\",\n        \"shopping_admin\"\n    ],\n    \"require_login\": true,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent\": \"Show me the route and driving time from Allentown, PA to the city where my E-commerce customer Amanda Kim lives\"\n}"}, "full_task.json.txt": {"__FULL_TASK__": "{\n    \"sites\": [\n        \"map\",\n        \"shopping_admin\"\n    ],\n    \"task_id\": 760,\n    \"require_login\": true,\n    \"storage_state\": null,\n    \"start_url\": \"__MAP__\",\n    \"geolocation\": null,\n    \"intent_template\": \"Show me the route and driving time from {{city1}} to {{city2}}\",\n    \"instantiation_dict\": {\n        \"city1\": \"Allentown, PA\",\n        \"city2\": \"the city where my E-commerce customer Amanda Kim lives\"\n    },\n    \"intent\": \"Show me the route and driving time from Allentown, PA to the city where my E-commerce customer Amanda Kim lives\",\n    \"require_reset\": false,\n    \"eval\": {\n        \"eval_types\": [\n            \"program_html\"\n        ],\n        \"reference_answers\": null,\n        \"reference_url\": \"\",\n        \"program_html\": [\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector(\\\"div#content select.routing_engines\\\").selectedIndex\",\n                \"required_contents\": {\n                    \"exact_match\": \"1\"\n                }\n            },\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('[name=\\\"route_from\\\"').value\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Allentown\"\n                    ]\n                }\n            },\n            {\n                \"url\": \"last\",\n                \"locator\": \"document.querySelector('[name=\\\"route_to\\\"').value\",\n                \"required_contents\": {\n                    \"must_include\": [\n                        \"Hoboken\",\n                        \"New Jersey\"\n                    ]\n                }\n            }\n        ]\n    },\n    \"intent_template_id\": 42\n}"}}}
